// test_integration.js

const request = require('supertest'); // 1. Supertest ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á Request
const assert = require('assert');     // 2. Assert ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
const server = require('./app');    // 3. ‡∏î‡∏∂‡∏á Server Object ‡∏ó‡∏µ‡πà Export ‡∏°‡∏≤

// ‚≠êÔ∏è 1. ‡πÉ‡∏ä‡πâ Mocha/Describe ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° Test ‚≠êÔ∏è
describe('Integration Test: Basic HTTP Server Endpoint', function() {
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Timeout ‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏ú‡∏∑‡πà‡∏≠ Supertest ‡∏ï‡πâ‡∏≠‡∏á Start/Stop
    this.timeout(5000); 

    it('should respond with status 200 and the correct body on GET /', async function() {
        // Arrange & Act: ‡πÉ‡∏ä‡πâ Supertest ‡∏à‡∏≥‡∏•‡∏≠‡∏á Request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Server
        const response = await request(server)
            .get('/'); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Endpoint Root (/)

        // ‚≠êÔ∏è Assert: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ‚≠êÔ∏è

        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Status Code
        assert.strictEqual(response.statusCode, 200, 'Status code should be 200 OK');
        
        // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Content-Type Header
        assert.strictEqual(response.headers['content-type'], 'text/plain', 'Content-Type header is incorrect');

        // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Body (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤)
        const expectedBody = 'Hello K8s from CI/CD Pipeline v58!!!!++++!\n';
        assert.strictEqual(response.text, expectedBody, 'Response body text does not match expected message');
    });

    // üí° ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏õ‡∏¥‡∏î Server ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏±‡∏ô Test ‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
    after(function(done) {
        server.close(done);
    });
});
