const assert = require('assert');
// ‡∏î‡∏∂‡∏á Unit (requestHandler) ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå server.js
const { requestHandler } = require('./app'); 

// ‚≠êÔ∏è Mock Class: ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Response Object ‚≠êÔ∏è
class MockResponse {
    constructor() {
        this.statusCode = null;
        this.headers = {};
        this.body = '';
    }
    setHeader(key, value) {
        this.headers[key] = value;
    }
    // ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
    end(chunk) {
        this.body += chunk; 
    }
}

console.log("--- Running Simple HTTP Handler Unit Test ---");

function test_http_response_content() {
    // Arrange: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° Mock Objects ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á
    const req = {}; // Request object ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ (‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å req)
    const res = new MockResponse(); // ‡∏™‡∏£‡πâ‡∏≤‡∏á Response Mock
    const expectedBody = 'Hello K8s from CI/CD Pipeline v58!!!!++++!\n';

    // Act: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Unit ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á Mock Objects ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
    requestHandler(req, res);

    // Assert: ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Mock Object
    assert.strictEqual(res.statusCode, 200, 'Test Failed: Status code should be 200.');
    assert.strictEqual(res.headers['Content-Type'], 'text/plain', 'Test Failed: Content-Type header is incorrect.');
    assert.strictEqual(res.body, expectedBody, 'Test Failed: Response body message mismatch.');
    
    console.log("Handler Content Test: PASSED ‚úÖ");
}

try {
    test_http_response_content();
    console.log("\nALL UNIT TESTS PASSED SUCCESSFULLY! üéâ");
} catch (error) {
    console.error("\nUNIT TESTS FAILED! ‚ùå");
    console.error(error.message);
    process.exit(1); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ CI Pipeline ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
}
